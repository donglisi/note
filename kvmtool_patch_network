diff --git a/builtin-run.c b/builtin-run.c
index bb7e6e8..8bf8e75 100644
--- a/builtin-run.c
+++ b/builtin-run.c
@@ -712,6 +712,7 @@ static struct kvm *kvm_cmd_run_init(int argc, const char **argv)
 	if (!kvm->cfg.guest_ip)
 		kvm->cfg.guest_ip = DEFAULT_GUEST_ADDR;
 
+	kvm->cfg.guest_mac = mac_addr_guest;
 	if (!kvm->cfg.guest_mac)
 		kvm->cfg.guest_mac = DEFAULT_GUEST_MAC;
 
diff --git a/include/kvm/kvm-config.h b/include/kvm/kvm-config.h
index 368e6c7..f556c83 100644
--- a/include/kvm/kvm-config.h
+++ b/include/kvm/kvm-config.h
@@ -14,11 +14,13 @@
 #define DEFAULT_GUEST_ADDR	"192.168.33.15"
 #define DEFAULT_GUEST_MAC	"02:15:15:15:15:15"
 #define DEFAULT_HOST_MAC	"02:01:01:01:01:01"
-#define DEFAULT_SCRIPT		"none"
+#define DEFAULT_SCRIPT		"/etc/qemu-ifup"
 #define DEFAULT_SANDBOX_FILENAME "guest/sandbox.sh"
 
 #define MIN_RAM_SIZE		SZ_64M
 
+extern char mac_addr_guest[];
+
 struct kvm_config {
 	struct kvm_config_arch arch;
 	struct disk_image_params disk_image[MAX_DISK_IMAGES];
diff --git a/main.c b/main.c
index 05bc82c..f5888ed 100644
--- a/main.c
+++ b/main.c
@@ -11,8 +11,23 @@ static int handle_kvm_command(int argc, char **argv)
 	return handle_command(kvm_commands, argc, (const char **) &argv[0]);
 }
 
+static void generate_mac_addr(char *mac, int len)
+{
+	FILE *fp;
+
+	fp = popen("printf '52:54:%02x:%02x:%02x:%02x' $(($RANDOM & 0xff)) $(($RANDOM & 0xff)) $(($RANDOM & 0xff)) $(($RANDOM & 0xff))", "r");
+	fgets(mac, len, fp);
+
+	pclose(fp);
+}
+
+#define mac_len 18
+char mac_addr_guest[mac_len];
+
 int main(int argc, char *argv[])
 {
+	generate_mac_addr(mac_addr_guest, mac_len);
+
 	kvm__set_dir("%s/%s", HOME_DIR, KVM_PID_FILE_PATH);
 
 	return handle_kvm_command(argc - 1, &argv[1]);
diff --git a/virtio/net.c b/virtio/net.c
index c4e302b..739e8db 100644
--- a/virtio/net.c
+++ b/virtio/net.c
@@ -899,6 +899,7 @@ int netdev_parser(const struct option *opt, const char *arg, int unset)
 	};
 
 	str_to_mac(DEFAULT_GUEST_MAC, p.guest_mac);
+	str_to_mac(mac_addr_guest, p.guest_mac);
 	p.guest_mac[5] += kvm->cfg.num_net_devices;
 
 	while (cur) {
